name: Deploy to Server

on:
  [ push, pull_request ]
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  name: devdenbot

jobs:
  push_to_registry:
    name: Push Docker image to GitHub Packages
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:

      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=ref,event=branch
            type=ref,event=pr
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    needs: [ push_to_registry ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Push to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.DEPLOY_USERNAME }}
          password: ${{ secrets.DEPLOY_PASSWORD }}
          script: |
            docker pull ghcr.io/thedeveloperden/${{ env.name }}:master # DO NOT REMOVE THIS OR EVERYTHING WILL BREAK
            docker stop ${{ env.name }}
            docker rm ${{ env.name }}
            docker run --name ${{ env.name }} -d -e "NODE_ENV=production" --env SENTRY_DSN=${{ secrets.SENTRY_DSN }} --env BOT_TOKEN=${{ secrets.DDB_TOKEN }} --env USERNAME=${{ secrets.DDB_DB_USERNAME }} --env DATABASE=devden --env PASSWORD=${{ secrets.DDB_DB_PASSWORD }} --env HOST=${{ secrets.DDB_DB_HOST }}  --net=net -it --restart unless-stopped ghcr.io/thedeveloperden/${{ env.name }}:master